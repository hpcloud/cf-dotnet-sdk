//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c9fd5166-3af7-4e54-b0bf-e41717f37348"",
    ""url"": ""/v2/space_quota_definitions/c9fd5166-3af7-4e54-b0bf-e41717f37348"",
    ""created_at"": ""2016-02-09T10:21:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""8c265a66-3715-44bd-adb7-3b5a3812eeac"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/8c265a66-3715-44bd-adb7-3b5a3812eeac"",
    ""spaces_url"": ""/v2/space_quota_definitions/c9fd5166-3af7-4e54-b0bf-e41717f37348/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("c9fd5166-3af7-4e54-b0bf-e41717f37348", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/c9fd5166-3af7-4e54-b0bf-e41717f37348", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8c265a66-3715-44bd-adb7-3b5a3812eeac", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/8c265a66-3715-44bd-adb7-3b5a3812eeac", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/c9fd5166-3af7-4e54-b0bf-e41717f37348/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""54d99510-e9c7-4b69-b9a0-702fe51c1f4b"",
    ""url"": ""/v2/space_quota_definitions/54d99510-e9c7-4b69-b9a0-702fe51c1f4b"",
    ""created_at"": ""2016-02-09T10:21:49Z"",
    ""updated_at"": ""2016-02-09T10:21:49Z""
  },
  ""entity"": {
    ""name"": ""name-1424"",
    ""organization_guid"": ""e2ba6ddf-1d05-4c52-ab25-ed4610712e7d"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/e2ba6ddf-1d05-4c52-ab25-ed4610712e7d"",
    ""spaces_url"": ""/v2/space_quota_definitions/54d99510-e9c7-4b69-b9a0-702fe51c1f4b/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("54d99510-e9c7-4b69-b9a0-702fe51c1f4b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/54d99510-e9c7-4b69-b9a0-702fe51c1f4b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1424", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("e2ba6ddf-1d05-4c52-ab25-ed4610712e7d", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/e2ba6ddf-1d05-4c52-ab25-ed4610712e7d", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/54d99510-e9c7-4b69-b9a0-702fe51c1f4b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c390e1a4-4688-4be5-978c-3b74e62205a4"",
    ""url"": ""/v2/space_quota_definitions/c390e1a4-4688-4be5-978c-3b74e62205a4"",
    ""created_at"": ""2016-02-09T10:21:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1448"",
    ""organization_guid"": ""797281f2-64d1-4331-b077-7865795607ad"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/797281f2-64d1-4331-b077-7865795607ad"",
    ""spaces_url"": ""/v2/space_quota_definitions/c390e1a4-4688-4be5-978c-3b74e62205a4/spaces""
  }
}";

            RemoveSpaceFromSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RemoveSpaceFromSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("c390e1a4-4688-4be5-978c-3b74e62205a4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/c390e1a4-4688-4be5-978c-3b74e62205a4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1448", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("797281f2-64d1-4331-b077-7865795607ad", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/797281f2-64d1-4331-b077-7865795607ad", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/c390e1a4-4688-4be5-978c-3b74e62205a4/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a0f953e3-2acd-46cb-ab91-1dce4d28f768"",
        ""url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768"",
        ""created_at"": ""2016-02-09T10:21:49Z"",
        ""updated_at"": ""2016-02-09T10:21:49Z""
      },
      ""entity"": {
        ""name"": ""name-1441"",
        ""organization_guid"": ""bfbb45b0-638e-430e-bb7b-af48562e052c"",
        ""space_quota_definition_guid"": ""74abc137-1054-4a3b-88af-061e71d4acad"",
        ""organization_url"": ""/v2/organizations/bfbb45b0-638e-430e-bb7b-af48562e052c"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/74abc137-1054-4a3b-88af-061e71d4acad"",
        ""developers_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/developers"",
        ""managers_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/managers"",
        ""auditors_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/auditors"",
        ""apps_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/apps"",
        ""routes_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/routes"",
        ""domains_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/domains"",
        ""service_instances_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/service_instances"",
        ""app_events_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/app_events"",
        ""events_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/events"",
        ""security_groups_url"": ""/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a0f953e3-2acd-46cb-ab91-1dce4d28f768", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1441", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bfbb45b0-638e-430e-bb7b-af48562e052c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("74abc137-1054-4a3b-88af-061e71d4acad", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("/v2/organizations/bfbb45b0-638e-430e-bb7b-af48562e052c", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/74abc137-1054-4a3b-88af-061e71d4acad", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a0f953e3-2acd-46cb-ab91-1dce4d28f768/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bab0710c-74ee-4d3f-bff8-7e9e0d541899"",
    ""url"": ""/v2/space_quota_definitions/bab0710c-74ee-4d3f-bff8-7e9e0d541899"",
    ""created_at"": ""2016-02-09T10:21:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1427"",
    ""organization_guid"": ""f2ca8d40-5392-4a73-9742-108f804697b5"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/f2ca8d40-5392-4a73-9742-108f804697b5"",
    ""spaces_url"": ""/v2/space_quota_definitions/bab0710c-74ee-4d3f-bff8-7e9e0d541899/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("bab0710c-74ee-4d3f-bff8-7e9e0d541899", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/bab0710c-74ee-4d3f-bff8-7e9e0d541899", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1427", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("f2ca8d40-5392-4a73-9742-108f804697b5", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/f2ca8d40-5392-4a73-9742-108f804697b5", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/bab0710c-74ee-4d3f-bff8-7e9e0d541899/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""85e2979a-aa20-4789-9f9b-9e65b76ecf0d"",
    ""url"": ""/v2/space_quota_definitions/85e2979a-aa20-4789-9f9b-9e65b76ecf0d"",
    ""created_at"": ""2016-02-09T10:21:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1443"",
    ""organization_guid"": ""3f33c044-fb96-4fc2-9de4-e16ae0f43a72"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/3f33c044-fb96-4fc2-9de4-e16ae0f43a72"",
    ""spaces_url"": ""/v2/space_quota_definitions/85e2979a-aa20-4789-9f9b-9e65b76ecf0d/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("85e2979a-aa20-4789-9f9b-9e65b76ecf0d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/85e2979a-aa20-4789-9f9b-9e65b76ecf0d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1443", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3f33c044-fb96-4fc2-9de4-e16ae0f43a72", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/3f33c044-fb96-4fc2-9de4-e16ae0f43a72", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/85e2979a-aa20-4789-9f9b-9e65b76ecf0d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""85391c80-5e26-4c39-ae4d-34cbe72fb4cd"",
        ""url"": ""/v2/space_quota_definitions/85391c80-5e26-4c39-ae4d-34cbe72fb4cd"",
        ""created_at"": ""2016-02-09T10:21:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1435"",
        ""organization_guid"": ""aed41895-f50b-4b04-8d5c-9ce70a4adb96"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/aed41895-f50b-4b04-8d5c-9ce70a4adb96"",
        ""spaces_url"": ""/v2/space_quota_definitions/85391c80-5e26-4c39-ae4d-34cbe72fb4cd/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("85391c80-5e26-4c39-ae4d-34cbe72fb4cd", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/85391c80-5e26-4c39-ae4d-34cbe72fb4cd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1435", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("aed41895-f50b-4b04-8d5c-9ce70a4adb96", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/aed41895-f50b-4b04-8d5c-9ce70a4adb96", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/85391c80-5e26-4c39-ae4d-34cbe72fb4cd/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }
    }
}
