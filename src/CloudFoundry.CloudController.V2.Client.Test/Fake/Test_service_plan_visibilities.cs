//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6150dc9e-5c6b-466d-8f47-5784823317aa"",
    ""url"": ""/v2/service_plan_visibilities/6150dc9e-5c6b-466d-8f47-5784823317aa"",
    ""created_at"": ""2016-02-09T10:21:53Z"",
    ""updated_at"": ""2016-02-09T10:21:53Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""3b630269-e454-4f81-b135-4b9eea06e86a"",
    ""organization_guid"": ""1b26d786-cad1-4503-b215-587a0fbae134"",
    ""service_plan_url"": ""/v2/service_plans/3b630269-e454-4f81-b135-4b9eea06e86a"",
    ""organization_url"": ""/v2/organizations/1b26d786-cad1-4503-b215-587a0fbae134""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("6150dc9e-5c6b-466d-8f47-5784823317aa", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/6150dc9e-5c6b-466d-8f47-5784823317aa", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-09T10:21:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-02-09T10:21:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("3b630269-e454-4f81-b135-4b9eea06e86a", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("1b26d786-cad1-4503-b215-587a0fbae134", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/3b630269-e454-4f81-b135-4b9eea06e86a", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/1b26d786-cad1-4503-b215-587a0fbae134", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0b4dcb46-ae33-4353-bca7-dfa1fb376322"",
        ""url"": ""/v2/service_plan_visibilities/0b4dcb46-ae33-4353-bca7-dfa1fb376322"",
        ""created_at"": ""2016-02-09T10:21:53Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""f11af331-e15d-499a-bcf9-c3008011b294"",
        ""organization_guid"": ""77f351eb-b2cd-44c6-adf3-f072f331aece"",
        ""service_plan_url"": ""/v2/service_plans/f11af331-e15d-499a-bcf9-c3008011b294"",
        ""organization_url"": ""/v2/organizations/77f351eb-b2cd-44c6-adf3-f072f331aece""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("0b4dcb46-ae33-4353-bca7-dfa1fb376322", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/0b4dcb46-ae33-4353-bca7-dfa1fb376322", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-09T10:21:53Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("f11af331-e15d-499a-bcf9-c3008011b294", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("77f351eb-b2cd-44c6-adf3-f072f331aece", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/f11af331-e15d-499a-bcf9-c3008011b294", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/77f351eb-b2cd-44c6-adf3-f072f331aece", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""cedb1495-8e10-4d95-af08-de6f50e4c89a"",
    ""url"": ""/v2/service_plan_visibilities/cedb1495-8e10-4d95-af08-de6f50e4c89a"",
    ""created_at"": ""2016-02-09T10:21:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""3f0c3f84-ed58-485e-ad2c-6702241de1ed"",
    ""organization_guid"": ""b9a0eecd-f62f-4efd-8a1e-0357a60d290b"",
    ""service_plan_url"": ""/v2/service_plans/3f0c3f84-ed58-485e-ad2c-6702241de1ed"",
    ""organization_url"": ""/v2/organizations/b9a0eecd-f62f-4efd-8a1e-0357a60d290b""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("cedb1495-8e10-4d95-af08-de6f50e4c89a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/cedb1495-8e10-4d95-af08-de6f50e4c89a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-09T10:21:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("3f0c3f84-ed58-485e-ad2c-6702241de1ed", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("b9a0eecd-f62f-4efd-8a1e-0357a60d290b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/3f0c3f84-ed58-485e-ad2c-6702241de1ed", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/b9a0eecd-f62f-4efd-8a1e-0357a60d290b", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""779b1386-2552-4689-91c6-92ce8e358c10"",
    ""url"": ""/v2/service_plan_visibilities/779b1386-2552-4689-91c6-92ce8e358c10"",
    ""created_at"": ""2016-02-09T10:21:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""31dca120-ae87-477a-b1f0-106d21f7b1df"",
    ""organization_guid"": ""ebc51f4a-1589-451a-84ca-02a0c74a2232"",
    ""service_plan_url"": ""/v2/service_plans/31dca120-ae87-477a-b1f0-106d21f7b1df"",
    ""organization_url"": ""/v2/organizations/ebc51f4a-1589-451a-84ca-02a0c74a2232""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("779b1386-2552-4689-91c6-92ce8e358c10", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/779b1386-2552-4689-91c6-92ce8e358c10", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-09T10:21:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("31dca120-ae87-477a-b1f0-106d21f7b1df", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("ebc51f4a-1589-451a-84ca-02a0c74a2232", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/31dca120-ae87-477a-b1f0-106d21f7b1df", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/ebc51f4a-1589-451a-84ca-02a0c74a2232", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}