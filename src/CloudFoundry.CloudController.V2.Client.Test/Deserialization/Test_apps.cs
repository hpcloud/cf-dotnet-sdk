//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0a419bff-acac-4bae-8386-4e7551d6cdc0"",
    ""url"": ""/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0"",
    ""created_at"": ""2016-02-09T10:21:45Z"",
    ""updated_at"": ""2016-02-09T10:21:45Z""
  },
  ""entity"": {
    ""name"": ""name-362"",
    ""production"": false,
    ""space_guid"": ""b5cd2793-6610-4d41-9bf8-110aedd0bb4e"",
    ""stack_guid"": ""456278e6-19aa-4ee8-a31f-d2dde62d0f8f"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""60bc1259-6f2d-4b44-8644-98785454509d"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:45Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/b5cd2793-6610-4d41-9bf8-110aedd0bb4e"",
    ""stack_url"": ""/v2/stacks/456278e6-19aa-4ee8-a31f-d2dde62d0f8f"",
    ""events_url"": ""/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/events"",
    ""service_bindings_url"": ""/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/service_bindings"",
    ""routes_url"": ""/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("0a419bff-acac-4bae-8386-4e7551d6cdc0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-362", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b5cd2793-6610-4d41-9bf8-110aedd0bb4e", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("456278e6-19aa-4ee8-a31f-d2dde62d0f8f", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("60bc1259-6f2d-4b44-8644-98785454509d", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/b5cd2793-6610-4d41-9bf8-110aedd0bb4e", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/456278e6-19aa-4ee8-a31f-d2dde62d0f8f", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0a419bff-acac-4bae-8386-4e7551d6cdc0/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c"",
        ""url"": ""/v2/routes/f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c"",
        ""created_at"": ""2016-02-09T10:21:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-4"",
        ""domain_guid"": ""947edfce-c06c-4075-8c4a-4b0f55e48754"",
        ""space_guid"": ""f4f350ad-c8a0-480a-86a5-73e5a1c8aac8"",
        ""domain_url"": ""/v2/domains/947edfce-c06c-4075-8c4a-4b0f55e48754"",
        ""space_url"": ""/v2/spaces/f4f350ad-c8a0-480a-86a5-73e5a1c8aac8"",
        ""apps_url"": ""/v2/routes/f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-4", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("947edfce-c06c-4075-8c4a-4b0f55e48754", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("f4f350ad-c8a0-480a-86a5-73e5a1c8aac8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/947edfce-c06c-4075-8c4a-4b0f55e48754", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/f4f350ad-c8a0-480a-86a5-73e5a1c8aac8", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/f5e8901e-d6e3-4f5a-9b34-cd7909ce6f2c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eee3a1ca-aba2-4444-82e0-747070465536"",
    ""url"": ""/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536"",
    ""created_at"": ""2016-02-09T10:21:46Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""f2376cf9-c65c-46af-9639-2badf511dad7"",
    ""stack_guid"": ""14f25acd-5c5e-4f1b-8142-09cd5e86d379"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""02619956-3f46-4691-a6c7-568ed8022eb7"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/f2376cf9-c65c-46af-9639-2badf511dad7"",
    ""stack_url"": ""/v2/stacks/14f25acd-5c5e-4f1b-8142-09cd5e86d379"",
    ""events_url"": ""/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/events"",
    ""service_bindings_url"": ""/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/service_bindings"",
    ""routes_url"": ""/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("eee3a1ca-aba2-4444-82e0-747070465536", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f2376cf9-c65c-46af-9639-2badf511dad7", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("14f25acd-5c5e-4f1b-8142-09cd5e86d379", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("02619956-3f46-4691-a6c7-568ed8022eb7", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f2376cf9-c65c-46af-9639-2badf511dad7", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/14f25acd-5c5e-4f1b-8142-09cd5e86d379", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/eee3a1ca-aba2-4444-82e0-747070465536/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5"",
    ""url"": ""/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5"",
    ""created_at"": ""2016-02-09T10:21:46Z"",
    ""updated_at"": ""2016-02-09T10:21:46Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""2d535813-b985-45a3-ad28-696174fb2146"",
    ""stack_guid"": ""f7fa87cf-bf94-4104-bb13-f54525ccb863"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""99b57f8c-8fa4-4573-bd64-cd0e7db61887"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:46Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/2d535813-b985-45a3-ad28-696174fb2146"",
    ""stack_url"": ""/v2/stacks/f7fa87cf-bf94-4104-bb13-f54525ccb863"",
    ""events_url"": ""/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/events"",
    ""service_bindings_url"": ""/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/service_bindings"",
    ""routes_url"": ""/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("2d535813-b985-45a3-ad28-696174fb2146", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("f7fa87cf-bf94-4104-bb13-f54525ccb863", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("99b57f8c-8fa4-4573-bd64-cd0e7db61887", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/2d535813-b985-45a3-ad28-696174fb2146", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/f7fa87cf-bf94-4104-bb13-f54525ccb863", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/4073c1b1-7cfb-4876-a4b5-bae1d2eb5ef5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ffe66e15-e6c3-4904-86a9-17cf3187f247"",
        ""url"": ""/v2/service_bindings/ffe66e15-e6c3-4904-86a9-17cf3187f247"",
        ""created_at"": ""2016-02-09T10:21:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""75ff732a-8658-4023-9547-32f75e79c23b"",
        ""service_instance_guid"": ""2beec000-b0e5-4656-820f-45ec3f0d40a7"",
        ""credentials"": {
          ""creds-key-184"": ""creds-val-184""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/75ff732a-8658-4023-9547-32f75e79c23b"",
        ""service_instance_url"": ""/v2/service_instances/2beec000-b0e5-4656-820f-45ec3f0d40a7""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ffe66e15-e6c3-4904-86a9-17cf3187f247", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/ffe66e15-e6c3-4904-86a9-17cf3187f247", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("75ff732a-8658-4023-9547-32f75e79c23b", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("2beec000-b0e5-4656-820f-45ec3f0d40a7", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/75ff732a-8658-4023-9547-32f75e79c23b", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/2beec000-b0e5-4656-820f-45ec3f0d40a7", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3f773738-11e0-42a1-bf01-55c0bd1a1dc0"",
        ""url"": ""/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0"",
        ""created_at"": ""2016-02-09T10:21:46Z"",
        ""updated_at"": ""2016-02-09T10:21:46Z""
      },
      ""entity"": {
        ""name"": ""name-434"",
        ""production"": false,
        ""space_guid"": ""e691da48-f64e-411f-b2fa-619466056e39"",
        ""stack_guid"": ""0fa43953-f941-4107-81eb-11242398e790"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""ad7e5abc-a781-461c-b486-03fa2181eb42"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-09T10:21:46Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/e691da48-f64e-411f-b2fa-619466056e39"",
        ""stack_url"": ""/v2/stacks/0fa43953-f941-4107-81eb-11242398e790"",
        ""events_url"": ""/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/events"",
        ""service_bindings_url"": ""/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/service_bindings"",
        ""routes_url"": ""/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""48cce9b8-d6d1-4414-8222-c5fa6fc88711"",
        ""url"": ""/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711"",
        ""created_at"": ""2016-02-09T10:21:46Z"",
        ""updated_at"": ""2016-02-09T10:21:46Z""
      },
      ""entity"": {
        ""name"": ""name-429"",
        ""production"": false,
        ""space_guid"": ""38b01501-0562-48b6-b11e-e7489191649e"",
        ""stack_guid"": ""6812583a-3380-4ce5-b060-807e7cceb15a"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""df434476-e662-436b-9f16-5f38db9ac075"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-09T10:21:46Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/38b01501-0562-48b6-b11e-e7489191649e"",
        ""stack_url"": ""/v2/stacks/6812583a-3380-4ce5-b060-807e7cceb15a"",
        ""events_url"": ""/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/events"",
        ""service_bindings_url"": ""/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/service_bindings"",
        ""routes_url"": ""/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d01622e4-00e0-476c-a488-f442838969a5"",
        ""url"": ""/v2/apps/d01622e4-00e0-476c-a488-f442838969a5"",
        ""created_at"": ""2016-02-09T10:21:46Z"",
        ""updated_at"": ""2016-02-09T10:21:46Z""
      },
      ""entity"": {
        ""name"": ""name-439"",
        ""production"": false,
        ""space_guid"": ""18402b60-50b4-4811-9447-bac8a457e057"",
        ""stack_guid"": ""6a9446a3-8a0e-4b5d-b6af-48dfebee4614"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""89b3eaea-4972-4c30-91f5-549a7cd3657e"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-09T10:21:46Z"",
        ""detected_start_command"": """",
        ""space_url"": ""/v2/spaces/18402b60-50b4-4811-9447-bac8a457e057"",
        ""stack_url"": ""/v2/stacks/6a9446a3-8a0e-4b5d-b6af-48dfebee4614"",
        ""events_url"": ""/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/events"",
        ""service_bindings_url"": ""/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/service_bindings"",
        ""routes_url"": ""/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3f773738-11e0-42a1-bf01-55c0bd1a1dc0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-434", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("e691da48-f64e-411f-b2fa-619466056e39", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0fa43953-f941-4107-81eb-11242398e790", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("ad7e5abc-a781-461c-b486-03fa2181eb42", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/e691da48-f64e-411f-b2fa-619466056e39", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/0fa43953-f941-4107-81eb-11242398e790", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3f773738-11e0-42a1-bf01-55c0bd1a1dc0/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("48cce9b8-d6d1-4414-8222-c5fa6fc88711", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-429", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("38b01501-0562-48b6-b11e-e7489191649e", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("6812583a-3380-4ce5-b060-807e7cceb15a", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("df434476-e662-436b-9f16-5f38db9ac075", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/38b01501-0562-48b6-b11e-e7489191649e", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/6812583a-3380-4ce5-b060-807e7cceb15a", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/48cce9b8-d6d1-4414-8222-c5fa6fc88711/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("d01622e4-00e0-476c-a488-f442838969a5", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/d01622e4-00e0-476c-a488-f442838969a5", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-439", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("18402b60-50b4-4811-9447-bac8a457e057", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("6a9446a3-8a0e-4b5d-b6af-48dfebee4614", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("89b3eaea-4972-4c30-91f5-549a7cd3657e", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/18402b60-50b4-4811-9447-bac8a457e057", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/6a9446a3-8a0e-4b5d-b6af-48dfebee4614", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/d01622e4-00e0-476c-a488-f442838969a5/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""f8bd8704-6029-4059-8276-12ae18a915ae"",""name"":""name-1927"",""routes"":[{""guid"":""6121f232-07db-4176-b296-108152fe1d31"",""host"":""host-20"",""domain"":{""guid"":""3016b429-e44c-4ee5-a91c-422ff84a4777"",""name"":""domain-41.example.com""}}],""running_instances"":0,""services"":[{""guid"":""2cf71119-6b9e-44e3-8c8d-1564ad3a524f"",""name"":""name-1929"",""bound_app_count"":1,""last_operation"":null,""dashboard_url"":null,""service_plan"":{""guid"":""463a4ae2-251d-4ced-a9d7-4e1553d50ce1"",""name"":""name-1930"",""service"":{""guid"":""c9abe19b-7279-4836-b6fd-a28d9b30a384"",""label"":""label-64"",""provider"":null,""version"":null}}}],""available_domains"":[{""guid"":""3016b429-e44c-4ee5-a91c-422ff84a4777"",""name"":""domain-41.example.com"",""owning_organization_guid"":""25a573d0-06bb-4c7a-9697-a1e601b56d8a""},{""guid"":""4d600acc-a047-41fe-a93b-87b39196304b"",""name"":""customer-app-domain1.com""},{""guid"":""4c6f4408-75f8-4a80-8fdf-04ae706cfb20"",""name"":""customer-app-domain2.com""}],""name"":""name-1927"",""production"":false,""space_guid"":""c74171c4-06ab-452e-9640-b84472e1d071"",""stack_guid"":""86143f6f-2b81-4ec8-98e5-f285cf3ba5eb"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""d78ab62a-d5e2-4e21-aa49-26a9b34c36bc"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""diego"":false,""docker_image"":null,""package_updated_at"":""2016-02-09T10:21:55Z"",""detected_start_command"":""""}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("f8bd8704-6029-4059-8276-12ae18a915ae", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1927", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("c74171c4-06ab-452e-9640-b84472e1d071", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("86143f6f-2b81-4ec8-98e5-f285cf3ba5eb", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("d78ab62a-d5e2-4e21-aa49-26a9b34c36bc", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:55Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7b5c8984-752a-4648-a73c-b48023898326"",
    ""url"": ""/v2/apps/7b5c8984-752a-4648-a73c-b48023898326"",
    ""created_at"": ""2016-02-09T10:21:50Z"",
    ""updated_at"": ""2016-02-09T10:21:50Z""
  },
  ""entity"": {
    ""name"": ""name-1487"",
    ""production"": false,
    ""space_guid"": ""49f52caa-88c6-4f0e-a6cd-0db42163795a"",
    ""stack_guid"": ""7f8ee7e3-8333-4286-9ce6-137fafc7155a"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""0d6838a0-6a16-44bc-af04-d8b249795ed3"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:50Z"",
    ""detected_start_command"": """"
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("7b5c8984-752a-4648-a73c-b48023898326", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/7b5c8984-752a-4648-a73c-b48023898326", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:50Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1487", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("49f52caa-88c6-4f0e-a6cd-0db42163795a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("7f8ee7e3-8333-4286-9ce6-137fafc7155a", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("0d6838a0-6a16-44bc-af04-d8b249795ed3", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:50Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""c22d12fd-4baa-437a-a19f-329c372d5bba"",
      ""application_name"": ""name-545"",
      ""application_uris"": [

      ],
      ""version"": ""c22d12fd-4baa-437a-a19f-329c372d5bba"",
      ""name"": ""name-545"",
      ""space_name"": ""name-546"",
      ""space_id"": ""1e35e7fd-1c91-4974-99cf-2231ec3784bf"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a"",
    ""created_at"": ""2016-02-09T10:21:54Z"",
    ""url"": ""/v2/jobs/fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a""
  },
  ""entity"": {
    ""guid"": ""fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-09T10:21:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("fbc05b53-cf3c-4fe4-9c75-4725e76d1f1a", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0f862870-5d71-437f-bcd0-7a46af9f21e3"",
    ""url"": ""/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3"",
    ""created_at"": ""2016-02-09T10:21:45Z"",
    ""updated_at"": ""2016-02-09T10:21:45Z""
  },
  ""entity"": {
    ""name"": ""name-347"",
    ""production"": false,
    ""space_guid"": ""1327a604-b505-41d3-ac31-6f64e68c817a"",
    ""stack_guid"": ""5bb77854-dcd2-425b-bab8-660872afc150"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""f1171f0a-3f6c-464f-b8c0-7cf21db4dbc4"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:45Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/1327a604-b505-41d3-ac31-6f64e68c817a"",
    ""stack_url"": ""/v2/stacks/5bb77854-dcd2-425b-bab8-660872afc150"",
    ""events_url"": ""/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/events"",
    ""service_bindings_url"": ""/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/service_bindings"",
    ""routes_url"": ""/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("0f862870-5d71-437f-bcd0-7a46af9f21e3", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-347", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("1327a604-b505-41d3-ac31-6f64e68c817a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("5bb77854-dcd2-425b-bab8-660872afc150", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("f1171f0a-3f6c-464f-b8c0-7cf21db4dbc4", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/1327a604-b505-41d3-ac31-6f64e68c817a", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/5bb77854-dcd2-425b-bab8-660872afc150", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0f862870-5d71-437f-bcd0-7a46af9f21e3/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0daad4fe-d572-436f-a5ee-3edcb0fe8b38"",
    ""url"": ""/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38"",
    ""created_at"": ""2016-02-09T10:21:45Z"",
    ""updated_at"": ""2016-02-09T10:21:45Z""
  },
  ""entity"": {
    ""name"": ""name-332"",
    ""production"": false,
    ""space_guid"": ""f970882b-b62b-4f20-948d-beb7c4d4d414"",
    ""stack_guid"": ""f696c1de-7cf1-4211-a07a-fb4a3419aff3"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""802e642f-629c-4370-87f6-69c582e52f42"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:45Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/f970882b-b62b-4f20-948d-beb7c4d4d414"",
    ""stack_url"": ""/v2/stacks/f696c1de-7cf1-4211-a07a-fb4a3419aff3"",
    ""events_url"": ""/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/events"",
    ""service_bindings_url"": ""/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/service_bindings"",
    ""routes_url"": ""/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("0daad4fe-d572-436f-a5ee-3edcb0fe8b38", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-332", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f970882b-b62b-4f20-948d-beb7c4d4d414", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("f696c1de-7cf1-4211-a07a-fb4a3419aff3", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("802e642f-629c-4370-87f6-69c582e52f42", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:45Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/f970882b-b62b-4f20-948d-beb7c4d4d414", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/f696c1de-7cf1-4211-a07a-fb4a3419aff3", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0daad4fe-d572-436f-a5ee-3edcb0fe8b38/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2feb0a1a-ab00-47c8-999d-86aadd068dee"",
    ""url"": ""/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee"",
    ""created_at"": ""2016-02-09T10:21:46Z"",
    ""updated_at"": ""2016-02-09T10:21:46Z""
  },
  ""entity"": {
    ""name"": ""name-419"",
    ""production"": false,
    ""space_guid"": ""32183f32-0198-44d1-b82a-67083f06ecce"",
    ""stack_guid"": ""cf6bb925-6b2e-45b9-ae5c-8ea4c0d7615d"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""84ff4714-a740-4bae-a74f-91c2acc42f2d"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-09T10:21:46Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/32183f32-0198-44d1-b82a-67083f06ecce"",
    ""stack_url"": ""/v2/stacks/cf6bb925-6b2e-45b9-ae5c-8ea4c0d7615d"",
    ""events_url"": ""/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/events"",
    ""service_bindings_url"": ""/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/service_bindings"",
    ""routes_url"": ""/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("2feb0a1a-ab00-47c8-999d-86aadd068dee", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-419", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("32183f32-0198-44d1-b82a-67083f06ecce", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("cf6bb925-6b2e-45b9-ae5c-8ea4c0d7615d", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("84ff4714-a740-4bae-a74f-91c2acc42f2d", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/32183f32-0198-44d1-b82a-67083f06ecce", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/cf6bb925-6b2e-45b9-ae5c-8ea4c0d7615d", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/2feb0a1a-ab00-47c8-999d-86aadd068dee/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUploadsBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""673b299d-cfee-46f4-865b-2487f502c756"",
    ""created_at"": ""2016-02-09T10:21:54Z"",
    ""url"": ""/v2/jobs/673b299d-cfee-46f4-865b-2487f502c756""
  },
  ""entity"": {
    ""guid"": ""673b299d-cfee-46f4-865b-2487f502c756"",
    ""status"": ""queued""
  }
}";

            UploadsBitsForAppResponse obj = Utilities.DeserializeJson<UploadsBitsForAppResponse>(json);

            Assert.AreEqual("673b299d-cfee-46f4-865b-2487f502c756", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-09T10:21:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/673b299d-cfee-46f4-865b-2487f502c756", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("673b299d-cfee-46f4-865b-2487f502c756", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""646c313a-89c0-42cf-a26f-021d867e25a2"",
    ""url"": ""/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2"",
    ""created_at"": ""2016-02-09T10:21:46Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""9db1fb73-ae3f-450f-9a4b-c20a0d96e980"",
    ""stack_guid"": ""14f25acd-5c5e-4f1b-8142-09cd5e86d379"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""e53ce9cb-cc7a-4f96-8cb4-27eed50b4b4f"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": true,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2016-02-09T10:21:46Z"",
    ""detected_start_command"": """",
    ""space_url"": ""/v2/spaces/9db1fb73-ae3f-450f-9a4b-c20a0d96e980"",
    ""stack_url"": ""/v2/stacks/14f25acd-5c5e-4f1b-8142-09cd5e86d379"",
    ""events_url"": ""/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/events"",
    ""service_bindings_url"": ""/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/service_bindings"",
    ""routes_url"": ""/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("646c313a-89c0-42cf-a26f-021d867e25a2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("9db1fb73-ae3f-450f-9a4b-c20a0d96e980", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("14f25acd-5c5e-4f1b-8142-09cd5e86d379", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("e53ce9cb-cc7a-4f96-8cb4-27eed50b4b4f", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-09T10:21:46Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("/v2/spaces/9db1fb73-ae3f-450f-9a4b-c20a0d96e980", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/14f25acd-5c5e-4f1b-8142-09cd5e86d379", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/646c313a-89c0-42cf-a26f-021d867e25a2/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
